upstream jenkins {
  keepalive 32; # keepalive connections
  server jenkins:8080; # jenkins ip and port
}

# Required for Jenkins websocket agents
map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

server {
  listen 443 ssl;
  listen [::]:443 ssl;

  include snippets/self-signed.conf;
  include snippets/ssl-params.conf;

  server_name adsigno.sdu.dk;

  # pass through headers from Jenkins that Nginx considers invalid
  ignore_invalid_headers off;

  location / {
	  proxy_pass http://web:8000;
	  proxy_set_header Host $host;
    proxy_set_header X-Forwarded-Proto https;
	  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  location /jenkins/userContent {
    # have nginx handle all the static requests to userContent folder
    # note : This is the $JENKINS_HOME dir
    root /var/jenkins_home/;
    if (!-f $request_filename){
      # this file does not exist, might be a directory or a /**view** url
      rewrite (.*) /$1 last;
      break;
    }
    sendfile on;
  }

  location /jenkins/ {
    sendfile off;
    proxy_pass http://jenkins;
    proxy_redirect     default;
    proxy_http_version 1.1;

    # Required for Jenkins websocket agents
    proxy_set_header   Connection        $connection_upgrade;
    proxy_set_header   Upgrade           $http_upgrade;

    proxy_set_header   Host              $host;
    proxy_set_header   X-Real-IP         $remote_addr;
    proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto $scheme;
    proxy_max_temp_file_size 0;

    #this is the maximum upload size
    client_max_body_size       10m;
    client_body_buffer_size    128k;

    proxy_connect_timeout      90;
    proxy_send_timeout         90;
    proxy_read_timeout         90;
    proxy_buffering            off;
    proxy_request_buffering    off; # Required for HTTP CLI commands
    proxy_set_header Connection ""; # Clear for keepalive
  }

   location ~ "^/static/[0-9a-fA-F]{8}\/(.*)$" {
    # jenkins static files 
    # rewrite all static files into requests to the root
    # E.g /static/12345678/css/something.css will become /css/something.css
    rewrite "^/static/[0-9a-fA-F]{8}\/(.*)" /$1 last;
  }

  location /static/ {
    autoindex on;
    alias /var/www/adsigno/static/;
  }

  location /media/ {
    autoindex on;
    alias /var/www/adsigno/media/;
  }
}

server {
  listen 80;
  listen [::]:80;

  server_name adsigno.sdu.dk;

  return 301 https://$server_name$request_uri;
}
